{"version":3,"file":"/Users/shaunegan/dev/shaunegan/aws-params/src/ConfigFactory.ts","sources":["/Users/shaunegan/dev/shaunegan/aws-params/src/ConfigFactory.ts"],"names":[],"mappings":";;;AAQA,IAAM,WAAW,GAAG,UAAC,GAAW,IAAK,OAAA,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,EAAE,EAA1B,CAA0B,CAAA;AAE/D;IACE,uBAAqB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;IAC3C,CAAC;IAEM,2BAAG,GAAV;QACE,IAAM,IAAI,GAAiB,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAA;QAC7C,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;QAC5C,IAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAA;QAE3D,OAAO;YACL,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;YACnD,cAAc,EAAE,cAAc,KAAK,MAAM,IAAI,cAAc,KAAK,GAAG;SACpE,CAAA;IACH,CAAC;IACH,oBAAC;AAAD,CAAC,AAdD,IAcC;AAEQ,sCAAa","sourcesContent":["import { InputOptions } from '@actions/core'\n\ninterface Config {\n  names: string[],\n  withDecryption: boolean\n}\n\ntype InputFunction = (name: string, options?: InputOptions) => string\nconst nullOrEmpty = (val: string) => val === null || val === ''\n\nclass ConfigFactory {\n  constructor (private inputFn: InputFunction) {\n  }\n\n  public get (): Config {\n    const opts: InputOptions = { required: true }\n    const rawNames = this.inputFn('names', opts)\n    const withDecryption = this.inputFn('withDecryption', opts)\n\n    return {\n      names: rawNames.split(',').map(name => name.trim()),\n      withDecryption: withDecryption === 'true' || withDecryption === '1'\n    }\n  }\n}\n\nexport { ConfigFactory }\n"]}